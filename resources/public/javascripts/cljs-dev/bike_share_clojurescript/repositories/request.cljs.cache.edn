;; Analyzed by ClojureScript 0.0-3308
{:use-macros nil, :excludes #{}, :name bike_share_clojurescript.repositories.request, :imports nil, :requires {ajax.core ajax.core, transit cognitect.transit, cognitect.transit cognitect.transit}, :uses {GET ajax.core}, :defs {fetchStationsHandler {:protocol-inline nil, :meta {:file "/Users/steven.zhang/Documents/code/bike-stations-clojurescript/src/bike_share_clojurescript/repositories/request.cljs", :line 5, :column 7, :end-line 5, :end-column 27, :arglists (quote ([response]))}, :name bike_share_clojurescript.repositories.request/fetchStationsHandler, :variadic false, :file "src/bike_share_clojurescript/repositories/request.cljs", :end-column 27, :method-params ([response]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists (quote ([response]))}, fetchStations {:protocol-inline nil, :meta {:file "/Users/steven.zhang/Documents/code/bike-stations-clojurescript/src/bike_share_clojurescript/repositories/request.cljs", :line 10, :column 7, :end-line 10, :end-column 20, :arglists (quote ([]))}, :name bike_share_clojurescript.repositories.request/fetchStations, :variadic false, :file "src/bike_share_clojurescript/repositories/request.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:response-format :json :handler}, :order [:handler :response-format :json]}, :doc nil}